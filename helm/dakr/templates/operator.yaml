{{- if .Values.operator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dakr.fullname" . }}-operator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dakr.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ include "dakr.fullname" . }}-operator
    control-plane: {{ include "dakr.fullname" . }}-operator
spec:
  selector:
    matchLabels:
      {{- include "dakr.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ include "dakr.fullname" . }}-operator
      control-plane: {{ include "dakr.fullname" . }}-operator
  replicas: {{ .Values.operator.replicas | default 2 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        {{- if eq .Values.cloud "azure" }}
        azure.workload.identity/use: "true"
        {{- end }}
        {{- include "dakr.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ include "dakr.fullname" . }}-operator
        control-plane: {{ include "dakr.fullname" . }}-operator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /operator
        args:
          - --health-probe-bind-address=:8081
          - --agent-port=54192
          - --agent-namespace={{ .Release.Namespace }}
          - --agent-app-name={{ include "dakr.fullname" . }}-agent
          - --endpoint={{ .Values.operator.endpoint }}
          - --cluster-token={{ .Values.operator.clusterToken }}
          - --cluster-name={{ .Values.operator.clusterName }}
          - --cluster-location={{ .Values.operator.clusterLocation }}
          - --debug-http-addr=:{{ .Values.operator.debugPort | default 8082 }}
          - --argocd-patching={{ .Values.operator.features.argocdPatching | default false }}
          - --leader-election={{ include "dakr.leaderElection" . }}
          - --leader-election-namespace={{ .Release.Namespace }}
          {{- if .Values.webhook.enabled }}
          - --webhook-cert-path=/etc/tls
          {{- end }}
          {{- if .Values.operator.noCloudCreds }}
          - --no-cloud-creds
          {{- end }}
        env:
          {{- if .Values.operator.tokenFromConfigMap }}
          - name: TOKEN_CONFIGMAP_NAME
            value: {{ .Values.operator.tokenFromConfigMap.name | quote }}
          - name: TOKEN_CONFIGMAP_NAMESPACE
            value: {{ .Values.operator.tokenFromConfigMap.namespace | quote }}
          - name: TOKEN_CONFIGMAP_KEY
            value: {{ .Values.operator.tokenFromConfigMap.key | quote }}
          {{- end }}
          {{- if .Values.operator.nameFromConfigMap }}
          - name: CLUSTER_NAME_CONFIGMAP_NAME
            value: {{ .Values.operator.nameFromConfigMap.name | quote }}
          - name: CLUSTER_NAME_CONFIGMAP_NAMESPACE
            value: {{ .Values.operator.nameFromConfigMap.namespace | quote }}
          - name: CLUSTER_NAME_CONFIGMAP_KEY
            value: {{ .Values.operator.nameFromConfigMap.key | quote }}
          {{- end }}
        image: "{{ .Values.image.repository }}/{{ .Values.operator.image }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: manager
        ports:
          - name: http
            protocol: TCP
            containerPort: {{ .Values.operator.port | default 9443 }}
          - name: debug
            protocol: TCP
            containerPort: {{ .Values.operator.debugPort | default 8082 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        volumeMounts:
          - name: tls
            mountPath: "/etc/tls"
            readOnly: true
          - name: tls-ca
            mountPath: "/etc/tls-ca"
            readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: {{ include "dakr.fullname" . }}-operator-tls
            optional: true
        - name: tls-ca
          secret:
            secretName: {{ include "dakr.fullname" . }}-operator-tls-ca
            optional: true
      serviceAccountName: {{ .Values.operator.serviceAccount.name }}
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "dakr.fullname" . }}-operator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dakr.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ include "dakr.fullname" . }}-operator
    control-plane: {{ include "dakr.fullname" . }}-operator
spec:
  selector:
    app.kubernetes.io/component: {{ include "dakr.fullname" . }}-operator
    control-plane: {{ include "dakr.fullname" . }}-operator
  type: ClusterIP
  ports:
    # Main operator port (e.g. webhooks)
    - name: http
      protocol: TCP
      port: {{ .Values.operator.port | default 9443 }}
      targetPort: http
    # Debug HTTP server port
    - name: debug
      protocol: TCP
      port: {{ .Values.operator.debugPort | default 8082 }}
      targetPort: debug
{{- end }}