{{- if .Values.operator.customScheduler }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dz-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dz-scheduler-as-kube-scheduler
subjects:
- kind: ServiceAccount
  name: dz-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dz-scheduler-as-volume-scheduler
subjects:
- kind: ServiceAccount
  name: dz-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dz-scheduler-extension-apiserver-authentication-reader
  namespace: kube-system
roleRef:
  kind: Role
  name: extension-apiserver-authentication-reader
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: dz-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dz-scheduler-configmap-reader
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dz-scheduler-configmap-reader
subjects:
- kind: ServiceAccount
  name: dz-scheduler
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: dz-scheduler-configmap-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dz-scheduler-config
  namespace: kube-system
data:
  dz-scheduler-config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    profiles:
      - schedulerName: dz-scheduler
        pluginConfig:
        - name: TargetAllocated 
          args:
            memoryAllocatedPercent: 99
            cpuAllocatedPercent: 99
        - name: LimitOverProvisionControl 
          args:
            cpuOverProvisionPenalizeRatio: 180
            memoryOverProvisionPenalizeRatio: 180
        - name: NodeCost
          args:
            controlPlaneAddress: {{ .Values.scheduler.nodeCost.controlPlaneAddress | quote }}
            controlPlaneToken: {{ .Values.scheduler.nodeCost.controlPlaneToken | quote }}
            {{- if .Values.scheduler.nodeCost.tokenFromConfigMap }}
            tokenFromConfigMap:
              name: {{ .Values.scheduler.nodeCost.tokenFromConfigMap.name | quote }}
              namespace: {{ .Values.scheduler.nodeCost.tokenFromConfigMap.namespace | quote }}
              key: {{ .Values.scheduler.nodeCost.tokenFromConfigMap.key | quote }}
            {{- end }}
        - name: PodTopologySpread
          args:
            defaultingType: "List"
        plugins:
          preScore:
            enabled:
            - name: 'TaintToleration'
              weight: 6
            - name: 'NodeAffinity'
              weight: 5
            - name: 'PodTopologySpread'
              weight: 5
            - name: 'InterPodAffinity'
              weight: 5
            - name: 'TargetAllocated'
              weight: 3
            - name: 'LimitOverProvisionControl'
              weight: 2
            - name: 'NodeCost'
              weight: 4
            disabled:
            - name: 'NodeResourcesFit'
            - name: 'NodeResourcesBalancedAllocation'
          score:
            enabled:
            - name: 'TaintToleration'
              weight: 6
            - name: 'NodeAffinity'
              weight: 5
            - name: 'PodTopologySpread'
              weight: 5
            - name: 'InterPodAffinity'
              weight: 5
            - name: 'ImageLocality'
              weight: 1
            - name: 'TargetAllocated'
              weight: 3
            - name: 'LimitOverProvisionControl'
              weight: 2
            - name: 'NodeCost'
              weight: 4
            disabled:
            - name: 'NodeResourcesFit'
            - name: 'NodeResourcesBalancedAllocation'
    leaderElection:
      leaderElect: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: scheduler
    tier: control-plane
  name: dz-scheduler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      component: scheduler
      tier: control-plane
  replicas: 1
  template:
    metadata:
      labels:
        component: scheduler
        tier: control-plane
        version: second
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: dz-scheduler
      containers:
      - command:
        - /usr/local/bin/kube-scheduler
        - --config=/etc/kubernetes/dz-scheduler/dz-scheduler-config.yaml
        - --feature-gates=DynamicResourceAllocation=false
        image: devzeroinc/dzk8scheduler:{{ .Values.scheduler.image.tag }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
          initialDelaySeconds: 15
        name: kube-second-scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10259
            scheme: HTTPS
        resources:
          requests:
            cpu: "200m"
        securityContext:
          privileged: false
        volumeMounts:
          - name: config-volume
            mountPath: /etc/kubernetes/dz-scheduler
      hostNetwork: false
      hostPID: false
      volumes:
        - name: config-volume
          configMap:
            name: dz-scheduler-config
---
apiVersion: v1
kind: Service
metadata:
  name: dz-scheduler
  namespace: kube-system
  labels:
    component: scheduler
    tier: control-plane
spec:
  selector:
    component: scheduler
    tier: control-plane
  ports:
    - name: https-healthz
      port: 443
      targetPort: 10259
{{- end }}
